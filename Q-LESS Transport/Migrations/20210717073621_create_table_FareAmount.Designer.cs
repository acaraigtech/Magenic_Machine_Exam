// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Q_LESS_Transport.Presistence;

namespace Q_LESS_Transport.Migrations
{
    [DbContext(typeof(QLESSTransportAPIContextDb))]
    [Migration("20210717073621_create_table_FareAmount")]
    partial class create_table_FareAmount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<Guid>("CardTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FareAmountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Validity")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CardTypeId")
                        .IsUnique();

                    b.HasIndex("FareAmountId")
                        .IsUnique();

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.CardType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("CardTypes");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.DiscountCard", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.ToTable("DiscountCards");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.FareAmount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("FareAmounts");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.Card", b =>
                {
                    b.HasOne("Q_LESS_Transport.Domain.Models.CardType", "CardType")
                        .WithOne("Card")
                        .HasForeignKey("Q_LESS_Transport.Domain.Models.Card", "CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Q_LESS_Transport.Domain.Models.FareAmount", "FareAmount")
                        .WithOne("Card")
                        .HasForeignKey("Q_LESS_Transport.Domain.Models.Card", "FareAmountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardType");

                    b.Navigation("FareAmount");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.DiscountCard", b =>
                {
                    b.HasOne("Q_LESS_Transport.Domain.Models.Card", "Card")
                        .WithOne("DiscountCard")
                        .HasForeignKey("Q_LESS_Transport.Domain.Models.DiscountCard", "CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.Card", b =>
                {
                    b.Navigation("DiscountCard");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.CardType", b =>
                {
                    b.Navigation("Card");
                });

            modelBuilder.Entity("Q_LESS_Transport.Domain.Models.FareAmount", b =>
                {
                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
